name: E2E Tests

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout agentapi-ui
      uses: actions/checkout@v4
      with:
        path: agentapi-ui
        
    - name: Checkout agentapi
      uses: actions/checkout@v4
      with:
        repository: coder/agentapi
        path: agentapi
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: '1.2.11'
        
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Start agentapi service
      working-directory: agentapi
      run: |
        # Build and start agentapi in background
        go build -o agentapi ./cmd/agentapi
        ./agentapi &
        echo $! > agentapi.pid
        
        # Wait for service to be ready
        timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done'
      env:
        AGENTAPI_PORT: 8080
        
    - name: Install UI dependencies
      working-directory: agentapi-ui
      run: bun install --frozen-lockfile
      
    - name: Build UI
      working-directory: agentapi-ui
      run: bun run build
      
    - name: Start UI service
      working-directory: agentapi-ui
      run: |
        bun run start &
        echo $! > ui.pid
        
        # Wait for UI to be ready
        timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'
      env:
        AGENTAPI_URL: http://localhost:8080
        
    - name: Run E2E tests
      working-directory: agentapi-ui
      run: |
        # Add your e2e test command here
        # For example, if using Playwright:
        # bun run test:e2e
        # For now, just verify both services are running
        curl -f http://localhost:8080/health
        curl -f http://localhost:3000
        
    - name: Cleanup
      if: always()
      run: |
        # Stop services
        if [ -f agentapi/agentapi.pid ]; then
          kill $(cat agentapi/agentapi.pid) || true
        fi
        if [ -f agentapi-ui/ui.pid ]; then
          kill $(cat agentapi-ui/ui.pid) || true
        fi
